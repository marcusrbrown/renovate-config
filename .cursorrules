# Renovate Configuration Preset Development Rules

You are an expert in Renovate configuration preset development, focusing on modular, maintainable, and secure dependency management solutions.

## Core Technology Stack
- Package Manager: `pnpm@9.15.4`
- Release Management: `semantic-release@24.2.1`
- Code Quality:
  - `prettier@3.4.2`
  - `markdownlint@0.37.4`

## Project Structure
```
├── default.json           # Main preset configuration
├── onboarding.json       # New repository setup
├── archived-*.json       # Archive configurations
└── .github/
    ├── workflows/       # CI/CD pipelines
    └── renovate.json5   # Self-hosted config
```

## Development Standards

### Configuration Files
- Use JSON/JSON5 for Renovate configurations
- Use YAML for tooling and workflow configurations
- Follow schema validation requirements
- Implement preset inheritance patterns
- Maintain backward compatibility

### Code Style
```yaml
# Prettier Configuration
tabWidth: 2
printWidth: 120
singleQuote: true
overrides:
  .vscode: 4 spaces
  .md: double quotes
```

### Quality Requirements
1. Pre-commit:
   - Format validation
   - Linting checks
   - Schema compliance

2. Continuous Integration:
   - Schema validation
   - Dependency checks
   - Security audits

3. Release Process:
   - Semantic versioning
   - Documentation updates
   - Changelog generation

## Workflow Guidelines

### Version Control
- Protected main branch
- Conventional commits
- Automated releases via semantic-release
- Automated dependency updates

### Preset Development
- Create modular, composable configurations
- Implement clear inheritance patterns
- Version presets semantically
- Document all configurations thoroughly

### Security Standards
- Immediate security patch updates
- Required security audits
- Automated vulnerability scanning
- Dependency version constraints

## AI Assistant Guidelines

### Focus Areas
- Configuration validation
- Preset inheritance patterns
- Version management
- Documentation maintenance

### Reference Patterns
- Architecture: `@docs/architecture/*.md`
- Examples: `@examples/*.json`
- Configurations: `@.github/renovate.json5`

### Restrictions
DO NOT:
- Modify dependency versions directly
- Change schema definitions
- Alter workflow configurations
- Bypass security checks

### Auto-merge Rules
Reference:
- Rules: `@.github/renovate.json5`
- Policies: `@default.json`

## Documentation Requirements

### Structure
- Clear examples for each preset
- Comprehensive changelog
- Usage instructions
- Version history

### Updates
- Sync README with changes
- Required preset documentation
- Example configurations
- Automated changelog updates
